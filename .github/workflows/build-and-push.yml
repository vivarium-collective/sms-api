name: Build and Push Docker Images

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to build and push (optional)"
        required: false
        default: ""
      docker:
        description: "Set to 'true' to build for Docker (optional)"
        required: false
        default: "true"
      singularity:
        description: "Set to 'true' to build for Singularity (optional)"
        required: false
        default: "false"

jobs:
  build-and-push:
    if: ${{ inputs.docker == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required for pushing to ghcr.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Make script executable
        run: chmod +x ./scripts/build_action.sh

      - name: Run build and push script
        run: |
          ./scripts/build_action.sh "${{ inputs.version }}"

  build-and-push-singularity:
    if: ${{ inputs.singularity == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required for pushing to ghcr.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.4.2

      - name: Set up Docker auth for Apptainer
        run: |
          mkdir -p ~/.docker
          echo '{"auths": {"ghcr.io": {"auth": "'"$(echo -n "${{ github.actor }}:${{ secrets.GHCR_PAT }}" | base64)"'"}}}' > ~/.docker/config.json
        env:
          GHCR_PAT: ${{ secrets.GHCR_PAT }}

      - name: Make script executable
        run: chmod +x ./scripts/build_singularity.sh

      - name: Run Singularity build and push script
        run: |
          ./scripts/build_singularity.sh "${{ inputs.version }}"

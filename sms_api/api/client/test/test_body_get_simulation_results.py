# coding: utf-8

"""
    sms-api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.2.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sms_api.api.client.models.body_get_simulation_results import BodyGetSimulationResults

class TestBodyGetSimulationResults(unittest.TestCase):
    """BodyGetSimulationResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BodyGetSimulationResults:
        """Test BodyGetSimulationResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BodyGetSimulationResults`
        """
        model = BodyGetSimulationResults()
        if include_optional:
            return BodyGetSimulationResults(
                observable_names = sms_api.api.client.models.requested_observables.RequestedObservables(
                    items = [
                        ''
                        ], ),
                settings = sms_api.api.client.models.settings.Settings(
                    storage_bucket = 'files.biosimulations.dev',
                    storage_endpoint_url = 'https://storage.googleapis.com',
                    storage_region = 'us-east4',
                    storage_tensorstore_driver = 'zarr3',
                    storage_tensorstore_kvstore_driver = 'gcs',
                    temporal_service_url = 'localhost:7233',
                    storage_local_cache_dir = './local_cache',
                    storage_gcs_credentials_file = '',
                    mongodb_uri = 'mongodb://localhost:27017',
                    mongodb_database = 'biosimulations',
                    mongodb_collection_omex = 'BiosimOmex',
                    mongodb_collection_sims = 'BiosimSims',
                    mongodb_collection_compare = 'BiosimCompare',
                    postgres_user = '<USER>',
                    postgres_password = '<PASSWORD>',
                    postgres_database = 'sms',
                    postgres_host = 'localhost',
                    postgres_port = 56,
                    postgres_pool_size = 56,
                    postgres_max_overflow = 56,
                    postgres_pool_timeout = 56,
                    postgres_pool_recycle = 56,
                    slurm_submit_host = '',
                    slurm_submit_user = '',
                    slurm_submit_key_path = '',
                    slurm_partition = '',
                    slurm_node_list = '',
                    slurm_qos = '',
                    slurm_log_base_path = '',
                    slurm_base_path = '',
                    hpc_image_base_path = '',
                    hpc_parca_base_path = '',
                    hpc_repo_base_path = '',
                    hpc_sim_base_path = '',
                    nats_url = '',
                    nats_worker_event_subject = 'worker.events',
                    nats_emitter_url = '',
                    nats_emitter_magic_word = 'emitter-magic-word',
                    dev_mode = '0', )
            )
        else:
            return BodyGetSimulationResults(
                observable_names = sms_api.api.client.models.requested_observables.RequestedObservables(
                    items = [
                        ''
                        ], ),
        )
        """

    def testBodyGetSimulationResults(self):
        """Test BodyGetSimulationResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

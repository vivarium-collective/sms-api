# coding: utf-8

"""
    sms-api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.2.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sms_api.api.client.models.ecoli_simulation_run import EcoliSimulationRun

class TestEcoliSimulationRun(unittest.TestCase):
    """EcoliSimulationRun unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EcoliSimulationRun:
        """Test EcoliSimulationRun
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EcoliSimulationRun`
        """
        model = EcoliSimulationRun()
        if include_optional:
            return EcoliSimulationRun(
                job_id = 56,
                simulation = sms_api.api.client.models.ecoli_simulation.EcoliSimulation(
                    database_id = 56, 
                    sim_request = sms_api.api.client.models.ecoli_simulation_request.EcoliSimulationRequest(
                        simulator = sms_api.api.client.models.simulator_version.SimulatorVersion(
                            database_id = 56, 
                            git_commit_hash = '', 
                            git_repo_url = 'https://github.com/CovertLab/vEcoli', 
                            git_branch = 'master', ), 
                        parca_dataset_id = 56, 
                        variant_config = {
                            'key' : {
                                'key' : null
                                }
                            }, 
                        total_time = 1.337, ), 
                    hpc_run = sms_api.api.client.models.hpc_run.HpcRun(
                        database_id = 56, 
                        slurmjobid = 56, 
                        status = 'waiting', 
                        start_time = '', 
                        end_time = '', 
                        error_message = '', ), ),
                last_update = ''
            )
        else:
            return EcoliSimulationRun(
                job_id = 56,
                simulation = sms_api.api.client.models.ecoli_simulation.EcoliSimulation(
                    database_id = 56, 
                    sim_request = sms_api.api.client.models.ecoli_simulation_request.EcoliSimulationRequest(
                        simulator = sms_api.api.client.models.simulator_version.SimulatorVersion(
                            database_id = 56, 
                            git_commit_hash = '', 
                            git_repo_url = 'https://github.com/CovertLab/vEcoli', 
                            git_branch = 'master', ), 
                        parca_dataset_id = 56, 
                        variant_config = {
                            'key' : {
                                'key' : null
                                }
                            }, 
                        total_time = 1.337, ), 
                    hpc_run = sms_api.api.client.models.hpc_run.HpcRun(
                        database_id = 56, 
                        slurmjobid = 56, 
                        status = 'waiting', 
                        start_time = '', 
                        end_time = '', 
                        error_message = '', ), ),
        )
        """

    def testEcoliSimulationRun(self):
        """Test EcoliSimulationRun"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
